plugins {
    id 'java'
}

group = 'org.vitri'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.junit.vintage:junit-vintage-engine:5.7.2'
    implementation group: 'io.cucumber', name: 'cucumber-java', version: '7.20.1'
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.25.0'
    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
    testImplementation("io.github.bonigarcia:webdrivermanager:5.9.2")
    testImplementation group: 'io.cucumber', name: 'cucumber-junit', version: '7.20.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.26.3'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testImplementation group: 'io.rest-assured', name: 'rest-assured', version: '5.5.0'
    testImplementation group: 'org.json', name: 'json', version: '20240303'
    implementation group: 'io.rest-assured', name: 'json-schema-validator', version: '5.5.0'
}

test {
    useJUnitPlatform()
    systemProperty "cucumber.filter.tags", System.getProperty("cucumber.filter.tags")
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

def tags = (findProperty('tags') == null) ? 'not @exclude' : findProperty('tags') + ' and not @exclude'

tasks.register('cucumbertest') {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            mainClass = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = [
                    '--plugin', 'pretty',
                    '--plugin', 'html:reports/automation-report.html',
                    '--plugin', 'json:reports/automation-report.json',
                    '--glue', 'stepDef',
                    '--tags',"${tags}",
                    'src/test/java/feature']
        }
    }
}


tasks.register('apiTest') {
                    '--tags',"@api",
                    'src/test/resources/apiFeatures']
        }
    }
}

tasks.register('webTest') {
                    '--tags', "@web",
                    'src/test/resources/webFeatures']
        }
    }
}
